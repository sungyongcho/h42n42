(* This file was generated by Eliom-distillery.
   Feel free to use it, modify it, and redistribute it as you wish. *)
[%%shared
open Eliom_content.Html.D

let playground_elt = div ~a:[ a_class [ "playground" ]] []
]

[%%client
open Js_of_ocaml
open Eliom_content.Html
open CustomTypes

let get_playground () =
  { dom_elt = To_dom.of_div ~%playground_elt }

let create_creet () =
  let creet_elt = div ~a:[ a_class [ "creet" ] ] [] in
    { dom_elt = To_dom.of_div creet_elt }

let init_client () =
  let playground = get_playground () in
  (* Firebug.console##log_2 (Js.string "playground") playground; *)

  let creet = create_creet () in
  (* Firebug.console##log_2 (Js.string "creet_dom_elt") creet; *)

  Dom.appendChild playground.dom_elt creet.dom_elt]


let%server application_name = "h42n42"
let%client application_name = Eliom_client.get_application_name ()

(* Create a module for the application. See
   https://ocsigen.org/eliom/manual/clientserver-applications for more
   information. *)
module%shared App = Eliom_registration.App (struct
    let application_name = application_name
    let global_data_path = Some ["__global_data__"]
  end)

(* (* As the headers (stylesheets, etc) won't change, we ask Eliom not to
   update the <head> of the page when changing page. (This also avoids
   blinking when changing page in iOS). *)
let%client _ = Eliom_client.persist_document_head () *)

let%server main_service =
  Eliom_service.create ~path:(Eliom_service.Path [])
    ~meth:(Eliom_service.Get Eliom_parameter.unit) ()

let%client main_service = ~%main_service

(* let%shared temp () =
  div ~a:[ a_class ["bg-black p-4 rounded-lg"] ] [ (* p-4 for padding, rounded-lg for rounded corners *)
               h1 ~a:[a_class ["text-3xl font-bold text-gray-800"]] [pcdata "Hello, Ocsigen + Tailwind!"];
  ] *)

let%shared page () =
  body
    [
      div
        ~a:[ a_class [ "gameboard" ] ]
        [
          div ~a:[ a_class [ "river" ] ] [];
          playground_elt;
          (* Hospital is a dashed line at the bottom *)
        ];
    ]


let%shared () =
  App.register ~service:main_service (fun () () ->
    let _ = [%client (init_client () : unit)] in
    Lwt.return
      (
        html
          (head
             (title (txt "h42n42"))
             [ css_link
                 ~uri:
                   (make_uri
                      ~service:(Eliom_service.static_dir ())
                      ["css"; "h42n42.css"]) ();
              ])
          (page ())))
